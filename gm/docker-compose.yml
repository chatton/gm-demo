version: '3.8'
services:
  celestia-dev:
    hostname: celestia
    container_name: celestia
    image: 'ghcr.io/rollkit/local-celestia-devnet:v0.12.7'
    ports:
      - '26650:26650'
      - '26657:26657'
      - '26658:26658'
      - '26659:26659'
      - '9090:9090'
    healthcheck:
      test: 'curl http://celestia:26657/block'
      interval: 5s
      retries: 10
      start_period: 1s
      timeout: 10s
  
  wasm-simapp:
    hostname: wasm-simapp
    container_name: wasm-simapp
    image: '${WASM_SIMAPP_IMAGE:-ghcr.io/chatton/ibc-go-wasm-simd:latest}'
    ports:
      - '46657:46657'
      - '10290:10290'
      - '6060:6060'
    command:
      - /bin/sh
      - '-c'
      - /init-wasm-simapp.sh
    entrypoint:
      - ''
    volumes:
      - './scripts/init-wasm-simapp.sh:/init-wasm-simapp.sh'
      - './contracts/ics07_tendermint_cw.wasm:/ics07_tendermint_cw.wasm'
      - './scripts/update-genesis.py:/update-genesis.py'
    environment:
      - CHAIN_ID=wasm-simapp-1
# for some reason this is not working
#    healthcheck:
#      test: 'curl http://wasm-simapp:46657/block'
#      interval: 5s
#      retries: 10
#      start_period: 1s
#      timeout: 30s

  rollkit-app:
    user: root
    container_name: rollkit
    hostname: rollkit
    depends_on:
      celestia-dev:
        condition: service_healthy
    image: '${ROLLKIT_IMAGE:-ghcr.io/chatton/rollkit:latest}'
    command:
      - /bin/sh
      - '-c'
      - /init-rollkit.sh
    entrypoint:
      - ''
    volumes:
      - './scripts/init-rollkit.sh:/init-rollkit.sh'
    ports:
      - '36657:36657'
      - '36656:36656'
      - '9290:9290'
    healthcheck:
      test: 'curl http://rollkit:36657/block'
      interval: 5s
      retries: 10
      start_period: 1s
      timeout: 30s

  rly:
    user: relayer
    container_name: rly
    hostname: rly
    depends_on:
      celestia-dev:
        condition: service_healthy
      rollkit-app:
        condition: service_healthy
#      wasm-simapp:
#        condition: service_healthy
    image: 'rly:latest'
    command:
      - /bin/sh
      - '-c'
      # hard code 30 second wait before initializing the relayer. So the chains are up and running for connection/channel creation
      - "/init-rly.sh"
    entrypoint:
      - ''
    volumes:
      - './scripts/init-rly.sh:/init-rly.sh'
      - './test_configs/config.yaml:/home/relayer/docker/config.yaml'
